{
	"name": "df_transform_cases_deaths",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_cases_and_deaths",
						"type": "DatasetReference"
					},
					"name": "CasesAndDeathsSource"
				},
				{
					"linkedService": {
						"referenceName": "ls_adls_dfadfprojectstoragelake",
						"type": "LinkedServiceReference"
					},
					"name": "fileTwoDigitsCountryCodes",
					"description": "File on which the 2 digits country codes will be looked for."
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filterEuropeData"
				},
				{
					"name": "selectCertainColumns"
				},
				{
					"name": "pivotIndicatorColumn"
				},
				{
					"name": "lookupTwoDigitsCountryCode"
				},
				{
					"name": "selectForSink"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as integer,",
				"          date as date,",
				"          rate_14_day as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     ignoreNoFilesFound: false) ~> CasesAndDeathsSource",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as integer",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'lookup',",
				"     fileName: 'country_lookup.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> fileTwoDigitsCountryCodes",
				"CasesAndDeathsSource filter(continent=='Europe' && not(isNull(country_code))) ~> filterEuropeData",
				"filterEuropeData select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          daily_count,",
				"          source,",
				"          each(match(name == 'date'),",
				"               'reported_date' = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCertainColumns",
				"selectCertainColumns pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          reported_date,",
				"          source),",
				"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
				"     {} = sum(daily_count),",
				"     columnNaming: '$V_$Ncount',",
				"     lateral: false) ~> pivotIndicatorColumn",
				"pivotIndicatorColumn, fileTwoDigitsCountryCodes lookup(country_code == country_code_3_digit,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupTwoDigitsCountryCode",
				"lookupTwoDigitsCountryCode select(mapColumn(",
				"          country = pivotIndicatorColumn@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population = pivotIndicatorColumn@population,",
				"          cases_count = {confirmed cases_count},",
				"          deaths_count,",
				"          reported_date,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectForSink"
			]
		}
	}
}